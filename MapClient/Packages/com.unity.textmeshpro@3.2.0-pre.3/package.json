{
  "name": "com.unity.textmeshpro",
  "displayName": "TextMeshPro",
  "version": "3.2.0-pre.3",
  "unity": "2020.3",
  "description": "TextMeshPro is the ultimate text solution for Unity. It's the perfect replacement for Unity's UI Text and the legacy Text Mesh.\n\nPowerful and easy to use, TextMeshPro (also known as TMP) uses Advanced Text Rendering techniques along with a set of custom shaders; delivering substantial visual quality improvements while giving users incredible flexibility when it comes to text styling and texturing.\n\nTextMeshPro provides Improved Control over text formatting and layout with features like character, word, line and paragraph spacing, kerning, justified text, Links, over 30 Rich Text Tags available, support for Multi Font & Sprites, Custom Styles and more.\n\nGreat performance. Since the geometry created by TextMeshPro uses two triangles per character just like Unity's text components, this improved visual quality and flexibility comes at no additional performance cost.\n\n\n\nUPGRADE NOTE\n--------------------\nThis latest release of the TMP package includes updated TMP Essential Resources and TMP Examples & Extras. Be sure to update those via the \"Window - TextMeshPro - Import...\" menu options.",
  "keywords": [
    "TextMeshPro",
    "TextMesh Pro",
    "TMP",
    "Text",
    "SDF"
  ],
  "category": "Text Rendering",
  "dependencies": {
    "com.unity.ugui": "1.0.0"
  },
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/com.unity.textmeshpro.git",
    "type": "git",
    "revision": "77f8fb64afbae57702de803d5375832a8e21c89d"
  },
  "upm": {
    "changelog": "### Changes,- Fixed a potential IndexOutOfRangeException when trying to select any portions of text in an Input Field whose child text component is using Overflow mode Truncate or Ellipsis where due to RectTransform width and / or height restrictions have results in the text being fully truncated. Case #1361032 ,- Fixed incorrect character sequencing in the Input Field when using Japanese IME in UWP builds. Case #1374755,- Fixed several potential IndexOutOfRangeException in the Input Field when text is fully truncated when using Text Overflow mode Ellipsis or Truncate.,- Fixed Input Field incorrect caretPosition and / or stringPosition properties when updating these via scripting. Case #1334622,- Fixed incorrect event handling on UWP and Hololens 2. Case #1357718 and Case #1351006,- Fixed Input Field OnSelect event potentially firing twice on some mobile devices including Microsoft Surfaces.,- Fixed Input Field incorrect caret insertion position when text contains a Carriage Return &lt;CR&gt; at the end of a line. Case #1362068,- Added support for &lt;CR&gt; markup tag.,- Added value range check for the text component margins located in the text component extra settings. Case #1365554,- Added new overload to the TMP_FontAsset.CreateFontAsset() to enable creating font asset instances using a file path.,- Added new TMP_ResourceManager.RemoveFontAsset() function to remove a font asset from the TMP Resource Manager. This new function would typically be used prior to unloading bundles and / or resources.,- Warnings about potentially missing character 0x5F used to display underline or strikethrough will only be displayed when using those features when Display Warning is enabled in the TMP Settings.,- Fixed incorrect handling of '-' at the end of a line when using Text Overflow Page mode. Case #1382173,- Fixed incorrect line breaking when a hyphen '-' is preceded by a space. Case #1391990,- When using Text Wrapping Mode - Preserve White Space or Preserve White Space No Wrap, the &lt;ZWSP&gt; character will now contribute to the preferred height when it is the first and only character on a new line.,- Added ClearFontAssetGlyphCache() function to the TMP_ResourcesManager to enable clearing the font asset fallback glyph cache.,- Added new &lt;ZWJ&gt; markup tag.,- Added ability to define a list of fallback text assets in the TMP Settings to be used for Emojis.,- Added new property \"emojiFallbackSupport\" to text components which is also exposed in the extra settings section of the text component inspector. When enabled, this will prioritize searching the Emoji Fallback Text Assets before the primary font asset for characters defined as Emoji in Unicode 14.0. See [forum post](https://forum.unity.com/threads/fallback-to-emojis-before-fonts.1186174/) for details.,- Fixed duplicated character when using custom validator in conjunction with soft keyboard. Case #1387772,- The &lt;noparse&gt; markup tag will now also affect inline markup tags like &lt;br&gt;, &lt;shy&gt;, etc.,- Fixed newly created StyleSheets having two Normal styles.,- Added new Double Pass SDF shader and example scene to the TMP Examples & Extras to showcase this new shader.,- Added new context menu option to manually \"clear dynamic data\" of a dynamic font asset. This performs the same clearing of data as the \"Clear Dynamic Data on Build\" option when manually triggered.,- Added new &lt;a href=\"url\"&gt; markup tag which can be used as follows: \"See &lt;a href=\"http://url...\"&gt;this link&lt;/a&gt; for details.\". This new markup tag is similar to the &lt;link&gt; tag but does not use an ID.,- Added new \"A\" style to the Default Style Sheet referenced in the TMP Settings. This \"A\" style defines the styling of the new &lt;a&gt; markup tag.,- The TMP_Text.parseCtrlCharacters property which controls the interpretation and parsing of escape characters in the text component's Text Input box in the inspector, will now apply to all methods of setting the text on the component. Case #1400008,- Fixed potential Null Reference Exception when editing the name of a sprite character. Case #1396591,- Fixed issue where TMP_FontAsset.HasCharacters would return false when called prior to font asset initialization. Case #1394817,- Minor TMP_InputField UI improvement where \"Hide Mobile Input\" property will be disabled when \"Hide Soft Keyboard\" property is disabled. Case #1388243"
  },
  "upmCi": {
    "footprint": "2ba82b05f323a5e2c9fa3a2aaa232f683f237b67"
  }
}
